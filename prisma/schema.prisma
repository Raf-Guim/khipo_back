// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  name            String?
  password        String
  projects        Project[]
  ProjectsOnUsers ProjectsOnUsers[]
  tasks           Task[]
}

model Project {
  id          Int               @id @default(autoincrement())
  name        String
  description String?
  userId      Int
  user        User              @relation(fields: [userId], references: [id])
  Task        Task[]
  members     ProjectsOnUsers[]
}

model ProjectsOnUsers {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  profile    Profile

  @@id([userId, projectId])
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String?
  createdAt   DateTime @default(now())
  status      Status   @default(Pendente)
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  Tag         Tag[]
}

enum Status {
  Pendente
  EmAndamento
  Concluido
}

enum Profile {
  Owner
  Worker
}

model Tag {
  id     Int    @id @default(autoincrement())
  title  String @default("Default")
  taskId Int
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
}
